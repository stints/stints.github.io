{"ast":null,"code":"var _jsxFileName = \"/Users/jstinson/workspace/stints.github.io/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Experience from './components/exp';\nimport About from './components/about';\nimport Navigation from './components/navbar';\nimport 'bulma/css/bulma.css';\nimport './styles.css';\n\nconst App = () => {\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Navigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/experience\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Experience, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(About, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })))));\n};\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}), rootElement); // from bulma.io docs -- handles mobile menu\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Get all \"navbar-burger\" elements\n  const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0); // Check if there are any navbar burgers\n\n  if ($navbarBurgers.length > 0) {\n    // Add a click event on each of them\n    $navbarBurgers.forEach(el => {\n      el.addEventListener('click', () => {\n        // Get the target from the \"data-target\" attribute\n        const target = el.dataset.target;\n        const $target = document.getElementById(target); // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n\n        el.classList.toggle('is-active');\n        $target.classList.toggle('is-active');\n      });\n    });\n  }\n});","map":{"version":3,"sources":["/Users/jstinson/workspace/stints.github.io/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Switch","Route","Experience","About","Navigation","App","rootElement","document","getElementById","render","addEventListener","$navbarBurgers","Array","prototype","slice","call","querySelectorAll","length","forEach","el","target","dataset","$target","classList","toggle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAAQC,aAAR,EAAuBC,MAAvB,EAA+BC,KAA/B,QAA2C,kBAA3C;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAO,qBAAP;AACA,OAAO,cAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,CAFJ,CADF;AAeD,CAhBD;;AAkBA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAV,QAAQ,CAACW,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBH,WAAzB,E,CAEA;;AACAC,QAAQ,CAACG,gBAAT,CAA0B,kBAA1B,EAA8C,MAAM;AAElD;AACA,QAAMC,cAAc,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BR,QAAQ,CAACS,gBAAT,CAA0B,gBAA1B,CAA3B,EAAwE,CAAxE,CAAvB,CAHkD,CAKlD;;AACA,MAAIL,cAAc,CAACM,MAAf,GAAwB,CAA5B,EAA+B;AAE7B;AACAN,IAAAA,cAAc,CAACO,OAAf,CAAwBC,EAAE,IAAI;AAC5BA,MAAAA,EAAE,CAACT,gBAAH,CAAoB,OAApB,EAA6B,MAAM;AAEjC;AACA,cAAMU,MAAM,GAAGD,EAAE,CAACE,OAAH,CAAWD,MAA1B;AACA,cAAME,OAAO,GAAGf,QAAQ,CAACC,cAAT,CAAwBY,MAAxB,CAAhB,CAJiC,CAMjC;;AACAD,QAAAA,EAAE,CAACI,SAAH,CAAaC,MAAb,CAAoB,WAApB;AACAF,QAAAA,OAAO,CAACC,SAAR,CAAkBC,MAAlB,CAAyB,WAAzB;AAED,OAVD;AAWD,KAZD;AAaD;AACF,CAvBD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\n\nimport Experience from './components/exp';\nimport About from './components/about';\nimport Navigation from './components/navbar';\nimport 'bulma/css/bulma.css';\nimport './styles.css';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Navigation />\n        <main>\n          <Switch>\n            <Route path=\"/experience\">\n              <Experience />\n            </Route>\n            <Route path=\"/\">\n              <About />\n            </Route>\n          </Switch>\n        </main>\n    </BrowserRouter>\n  );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n\n// from bulma.io docs -- handles mobile menu\ndocument.addEventListener('DOMContentLoaded', () => {\n\n  // Get all \"navbar-burger\" elements\n  const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);\n\n  // Check if there are any navbar burgers\n  if ($navbarBurgers.length > 0) {\n\n    // Add a click event on each of them\n    $navbarBurgers.forEach( el => {\n      el.addEventListener('click', () => {\n\n        // Get the target from the \"data-target\" attribute\n        const target = el.dataset.target;\n        const $target = document.getElementById(target);\n\n        // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n        el.classList.toggle('is-active');\n        $target.classList.toggle('is-active');\n\n      });\n    });\n  }\n});"]},"metadata":{},"sourceType":"module"}